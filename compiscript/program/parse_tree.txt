program
  statement
    constantDeclaration
      TOKEN(const)
      TOKEN(PI)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(314)
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(greeting)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(string)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN("Hello, Compiscript!")
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(flag)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(boolean)
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(numbers)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
          TOKEN([)
          TOKEN(])
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                arrayLiteral
                                  TOKEN([)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(1)
                                  TOKEN(,)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(2)
                                  TOKEN(,)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(3)
                                  TOKEN(,)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(4)
                                  TOKEN(,)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(5)
                                  TOKEN(])
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(matrix)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
          TOKEN([)
          TOKEN(])
          TOKEN([)
          TOKEN(])
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                arrayLiteral
                                  TOKEN([)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          arrayLiteral
                                                            TOKEN([)
                                                            expression
                                                              assignmentExpr
                                                                conditionalExpr
                                                                  logicalOrExpr
                                                                    logicalAndExpr
                                                                      equalityExpr
                                                                        relationalExpr
                                                                          additiveExpr
                                                                            multiplicativeExpr
                                                                              unaryExpr
                                                                                primaryExpr
                                                                                  literalExpr
                                                                                    TOKEN(1)
                                                            TOKEN(,)
                                                            expression
                                                              assignmentExpr
                                                                conditionalExpr
                                                                  logicalOrExpr
                                                                    logicalAndExpr
                                                                      equalityExpr
                                                                        relationalExpr
                                                                          additiveExpr
                                                                            multiplicativeExpr
                                                                              unaryExpr
                                                                                primaryExpr
                                                                                  literalExpr
                                                                                    TOKEN(2)
                                                            TOKEN(])
                                  TOKEN(,)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          arrayLiteral
                                                            TOKEN([)
                                                            expression
                                                              assignmentExpr
                                                                conditionalExpr
                                                                  logicalOrExpr
                                                                    logicalAndExpr
                                                                      equalityExpr
                                                                        relationalExpr
                                                                          additiveExpr
                                                                            multiplicativeExpr
                                                                              unaryExpr
                                                                                primaryExpr
                                                                                  literalExpr
                                                                                    TOKEN(3)
                                                            TOKEN(,)
                                                            expression
                                                              assignmentExpr
                                                                conditionalExpr
                                                                  logicalOrExpr
                                                                    logicalAndExpr
                                                                      equalityExpr
                                                                        relationalExpr
                                                                          additiveExpr
                                                                            multiplicativeExpr
                                                                              unaryExpr
                                                                                primaryExpr
                                                                                  literalExpr
                                                                                    TOKEN(4)
                                                            TOKEN(])
                                  TOKEN(])
      TOKEN(;)
  statement
    functionDeclaration
      TOKEN(function)
      TOKEN(makeAdder)
      TOKEN(()
      parameters
        parameter
          TOKEN(x)
          TOKEN(:)
          type
            baseType
              TOKEN(integer)
      TOKEN())
      TOKEN(:)
      type
        baseType
          TOKEN(integer)
      block
        TOKEN({)
        statement
          returnStatement
            TOKEN(return)
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(x)
                            TOKEN(+)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN(1)
            TOKEN(;)
        TOKEN(})
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(addFive)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              TOKEN(()
                              expression
                                assignmentExpr
                                  conditionalExpr
                                    logicalOrExpr
                                      logicalAndExpr
                                        equalityExpr
                                          relationalExpr
                                            additiveExpr
                                              multiplicativeExpr
                                                unaryExpr
                                                  primaryExpr
                                                    leftHandSide
                                                      primaryAtom
                                                        TOKEN(makeAdder)
                                                      suffixOp
                                                        TOKEN(()
                                                        arguments
                                                          expression
                                                            assignmentExpr
                                                              conditionalExpr
                                                                logicalOrExpr
                                                                  logicalAndExpr
                                                                    equalityExpr
                                                                      relationalExpr
                                                                        additiveExpr
                                                                          multiplicativeExpr
                                                                            unaryExpr
                                                                              primaryExpr
                                                                                literalExpr
                                                                                  TOKEN(5)
                                                        TOKEN())
                              TOKEN())
      TOKEN(;)
  statement
    printStatement
      TOKEN(print)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN("5 + 1 = ")
                      TOKEN(+)
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(addFive)
      TOKEN())
      TOKEN(;)
  statement
    ifStatement
      TOKEN(if)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(addFive)
                    TOKEN(>)
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN(5)
      TOKEN())
      block
        TOKEN({)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("Greater than 5")
            TOKEN())
            TOKEN(;)
        TOKEN(})
      TOKEN(else)
      block
        TOKEN({)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("5 or less")
            TOKEN())
            TOKEN(;)
        TOKEN(})
  statement
    whileStatement
      TOKEN(while)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(addFive)
                    TOKEN(<)
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN(10)
      TOKEN())
      block
        TOKEN({)
        statement
          assignment
            TOKEN(addFive)
            TOKEN(=)
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(addFive)
                            TOKEN(+)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN(1)
            TOKEN(;)
        TOKEN(})
  statement
    doWhileStatement
      TOKEN(do)
      block
        TOKEN({)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("Result is now ")
                            TOKEN(+)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(addFive)
            TOKEN())
            TOKEN(;)
        statement
          assignment
            TOKEN(addFive)
            TOKEN(=)
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(addFive)
                            TOKEN(-)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN(1)
            TOKEN(;)
        TOKEN(})
      TOKEN(while)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(addFive)
                    TOKEN(>)
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN(7)
      TOKEN())
      TOKEN(;)
  statement
    forStatement
      TOKEN(for)
      TOKEN(()
      variableDeclaration
        TOKEN(let)
        TOKEN(i)
        typeAnnotation
          TOKEN(:)
          type
            baseType
              TOKEN(integer)
        initializer
          TOKEN(=)
          expression
            assignmentExpr
              conditionalExpr
                logicalOrExpr
                  logicalAndExpr
                    equalityExpr
                      relationalExpr
                        additiveExpr
                          multiplicativeExpr
                            unaryExpr
                              primaryExpr
                                literalExpr
                                  TOKEN(0)
        TOKEN(;)
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(i)
                    TOKEN(<)
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN(3)
      TOKEN(;)
      expression
        assignmentExpr
          leftHandSide
            primaryAtom
              TOKEN(i)
          TOKEN(=)
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(i)
                        TOKEN(+)
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(1)
      TOKEN())
      block
        TOKEN({)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("Loop index: ")
                            TOKEN(+)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(i)
            TOKEN())
            TOKEN(;)
        TOKEN(})
  statement
    foreachStatement
      TOKEN(foreach)
      TOKEN(()
      TOKEN(n)
      TOKEN(in)
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(numbers)
      TOKEN())
      block
        TOKEN({)
        statement
          ifStatement
            TOKEN(if)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(n)
                        TOKEN(==)
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN(3)
            TOKEN())
            block
              TOKEN({)
              statement
                continueStatement
                  TOKEN(continue)
                  TOKEN(;)
              TOKEN(})
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("Number: ")
                            TOKEN(+)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(n)
            TOKEN())
            TOKEN(;)
        statement
          ifStatement
            TOKEN(if)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(n)
                          TOKEN(>)
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN(4)
            TOKEN())
            block
              TOKEN({)
              statement
                breakStatement
                  TOKEN(break)
                  TOKEN(;)
              statement
                printStatement
                  TOKEN(print)
                  TOKEN(()
                  expression
                    assignmentExpr
                      conditionalExpr
                        logicalOrExpr
                          logicalAndExpr
                            equalityExpr
                              relationalExpr
                                additiveExpr
                                  multiplicativeExpr
                                    unaryExpr
                                      primaryExpr
                                        literalExpr
                                          TOKEN("5 + 1 = ")
                                  TOKEN(+)
                                  multiplicativeExpr
                                    unaryExpr
                                      primaryExpr
                                        leftHandSide
                                          primaryAtom
                                            TOKEN(addFive)
                  TOKEN())
                  TOKEN(;)
              TOKEN(})
        TOKEN(})
  statement
    switchStatement
      TOKEN(switch)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(addFive)
      TOKEN())
      TOKEN({)
      switchCase
        TOKEN(case)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(7)
        TOKEN(:)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("It's seven")
            TOKEN())
            TOKEN(;)
      switchCase
        TOKEN(case)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(6)
        TOKEN(:)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("It's six")
            TOKEN())
            TOKEN(;)
      defaultCase
        TOKEN(default)
        TOKEN(:)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("Something else")
            TOKEN())
            TOKEN(;)
      TOKEN(})
  statement
    tryCatchStatement
      TOKEN(try)
      block
        TOKEN({)
        statement
          variableDeclaration
            TOKEN(let)
            TOKEN(risky)
            typeAnnotation
              TOKEN(:)
              type
                baseType
                  TOKEN(integer)
            initializer
              TOKEN(=)
              expression
                assignmentExpr
                  conditionalExpr
                    logicalOrExpr
                      logicalAndExpr
                        equalityExpr
                          relationalExpr
                            additiveExpr
                              multiplicativeExpr
                                unaryExpr
                                  primaryExpr
                                    leftHandSide
                                      primaryAtom
                                        TOKEN(numbers)
                                      suffixOp
                                        TOKEN([)
                                        expression
                                          assignmentExpr
                                            conditionalExpr
                                              logicalOrExpr
                                                logicalAndExpr
                                                  equalityExpr
                                                    relationalExpr
                                                      additiveExpr
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              literalExpr
                                                                TOKEN(10)
                                        TOKEN(])
            TOKEN(;)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("Risky access: ")
                            TOKEN(+)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(risky)
            TOKEN())
            TOKEN(;)
        TOKEN(})
      TOKEN(catch)
      TOKEN(()
      TOKEN(err)
      TOKEN())
      block
        TOKEN({)
        statement
          printStatement
            TOKEN(print)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN("Caught an error: ")
                            TOKEN(+)
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(err)
            TOKEN())
            TOKEN(;)
        TOKEN(})
  statement
    classDeclaration
      TOKEN(class)
      TOKEN(Animal)
      TOKEN({)
      classMember
        variableDeclaration
          TOKEN(let)
          TOKEN(name)
          typeAnnotation
            TOKEN(:)
            type
              baseType
                TOKEN(string)
          TOKEN(;)
      classMember
        functionDeclaration
          TOKEN(function)
          TOKEN(constructor)
          TOKEN(()
          parameters
            parameter
              TOKEN(name)
              TOKEN(:)
              type
                baseType
                  TOKEN(string)
          TOKEN())
          block
            TOKEN({)
            statement
              assignment
                expression
                  assignmentExpr
                    conditionalExpr
                      logicalOrExpr
                        logicalAndExpr
                          equalityExpr
                            relationalExpr
                              additiveExpr
                                multiplicativeExpr
                                  unaryExpr
                                    primaryExpr
                                      leftHandSide
                                        primaryAtom
                                          TOKEN(this)
                TOKEN(.)
                TOKEN(name)
                TOKEN(=)
                expression
                  assignmentExpr
                    conditionalExpr
                      logicalOrExpr
                        logicalAndExpr
                          equalityExpr
                            relationalExpr
                              additiveExpr
                                multiplicativeExpr
                                  unaryExpr
                                    primaryExpr
                                      leftHandSide
                                        primaryAtom
                                          TOKEN(name)
                TOKEN(;)
            TOKEN(})
      classMember
        functionDeclaration
          TOKEN(function)
          TOKEN(speak)
          TOKEN(()
          TOKEN())
          TOKEN(:)
          type
            baseType
              TOKEN(string)
          block
            TOKEN({)
            statement
              returnStatement
                TOKEN(return)
                expression
                  assignmentExpr
                    conditionalExpr
                      logicalOrExpr
                        logicalAndExpr
                          equalityExpr
                            relationalExpr
                              additiveExpr
                                multiplicativeExpr
                                  unaryExpr
                                    primaryExpr
                                      leftHandSide
                                        primaryAtom
                                          TOKEN(this)
                                        suffixOp
                                          TOKEN(.)
                                          TOKEN(name)
                                TOKEN(+)
                                multiplicativeExpr
                                  unaryExpr
                                    primaryExpr
                                      literalExpr
                                        TOKEN(" makes a sound.")
                TOKEN(;)
            TOKEN(})
      TOKEN(})
  statement
    classDeclaration
      TOKEN(class)
      TOKEN(Dog)
      TOKEN(:)
      TOKEN(Animal)
      TOKEN({)
      classMember
        functionDeclaration
          TOKEN(function)
          TOKEN(speak)
          TOKEN(()
          TOKEN())
          TOKEN(:)
          type
            baseType
              TOKEN(string)
          block
            TOKEN({)
            statement
              returnStatement
                TOKEN(return)
                expression
                  assignmentExpr
                    conditionalExpr
                      logicalOrExpr
                        logicalAndExpr
                          equalityExpr
                            relationalExpr
                              additiveExpr
                                multiplicativeExpr
                                  unaryExpr
                                    primaryExpr
                                      leftHandSide
                                        primaryAtom
                                          TOKEN(this)
                                        suffixOp
                                          TOKEN(.)
                                          TOKEN(name)
                                TOKEN(+)
                                multiplicativeExpr
                                  unaryExpr
                                    primaryExpr
                                      literalExpr
                                        TOKEN(" barks.")
                TOKEN(;)
            TOKEN(})
      TOKEN(})
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(dog)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(Dog)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(new)
                                  TOKEN(Dog)
                                  TOKEN(()
                                  arguments
                                    expression
                                      assignmentExpr
                                        conditionalExpr
                                          logicalOrExpr
                                            logicalAndExpr
                                              equalityExpr
                                                relationalExpr
                                                  additiveExpr
                                                    multiplicativeExpr
                                                      unaryExpr
                                                        primaryExpr
                                                          literalExpr
                                                            TOKEN("Rex")
                                  TOKEN())
      TOKEN(;)
  statement
    printStatement
      TOKEN(print)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(dog)
                              suffixOp
                                TOKEN(.)
                                TOKEN(speak)
                              suffixOp
                                TOKEN(()
                                TOKEN())
      TOKEN())
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(first)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(numbers)
                                suffixOp
                                  TOKEN([)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(0)
                                  TOKEN(])
      TOKEN(;)
  statement
    printStatement
      TOKEN(print)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN("First number: ")
                      TOKEN(+)
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(first)
      TOKEN())
      TOKEN(;)
  statement
    functionDeclaration
      TOKEN(function)
      TOKEN(getMultiples)
      TOKEN(()
      parameters
        parameter
          TOKEN(n)
          TOKEN(:)
          type
            baseType
              TOKEN(integer)
      TOKEN())
      TOKEN(:)
      type
        baseType
          TOKEN(integer)
        TOKEN([)
        TOKEN(])
      block
        TOKEN({)
        statement
          variableDeclaration
            TOKEN(let)
            TOKEN(result)
            typeAnnotation
              TOKEN(:)
              type
                baseType
                  TOKEN(integer)
                TOKEN([)
                TOKEN(])
            initializer
              TOKEN(=)
              expression
                assignmentExpr
                  conditionalExpr
                    logicalOrExpr
                      logicalAndExpr
                        equalityExpr
                          relationalExpr
                            additiveExpr
                              multiplicativeExpr
                                unaryExpr
                                  primaryExpr
                                    literalExpr
                                      arrayLiteral
                                        TOKEN([)
                                        expression
                                          assignmentExpr
                                            conditionalExpr
                                              logicalOrExpr
                                                logicalAndExpr
                                                  equalityExpr
                                                    relationalExpr
                                                      additiveExpr
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              leftHandSide
                                                                primaryAtom
                                                                  TOKEN(n)
                                                          TOKEN(*)
                                                          unaryExpr
                                                            primaryExpr
                                                              literalExpr
                                                                TOKEN(1)
                                        TOKEN(,)
                                        expression
                                          assignmentExpr
                                            conditionalExpr
                                              logicalOrExpr
                                                logicalAndExpr
                                                  equalityExpr
                                                    relationalExpr
                                                      additiveExpr
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              leftHandSide
                                                                primaryAtom
                                                                  TOKEN(n)
                                                          TOKEN(*)
                                                          unaryExpr
                                                            primaryExpr
                                                              literalExpr
                                                                TOKEN(2)
                                        TOKEN(,)
                                        expression
                                          assignmentExpr
                                            conditionalExpr
                                              logicalOrExpr
                                                logicalAndExpr
                                                  equalityExpr
                                                    relationalExpr
                                                      additiveExpr
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              leftHandSide
                                                                primaryAtom
                                                                  TOKEN(n)
                                                          TOKEN(*)
                                                          unaryExpr
                                                            primaryExpr
                                                              literalExpr
                                                                TOKEN(3)
                                        TOKEN(,)
                                        expression
                                          assignmentExpr
                                            conditionalExpr
                                              logicalOrExpr
                                                logicalAndExpr
                                                  equalityExpr
                                                    relationalExpr
                                                      additiveExpr
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              leftHandSide
                                                                primaryAtom
                                                                  TOKEN(n)
                                                          TOKEN(*)
                                                          unaryExpr
                                                            primaryExpr
                                                              literalExpr
                                                                TOKEN(4)
                                        TOKEN(,)
                                        expression
                                          assignmentExpr
                                            conditionalExpr
                                              logicalOrExpr
                                                logicalAndExpr
                                                  equalityExpr
                                                    relationalExpr
                                                      additiveExpr
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              leftHandSide
                                                                primaryAtom
                                                                  TOKEN(n)
                                                          TOKEN(*)
                                                          unaryExpr
                                                            primaryExpr
                                                              literalExpr
                                                                TOKEN(5)
                                        TOKEN(])
            TOKEN(;)
        statement
          returnStatement
            TOKEN(return)
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(result)
            TOKEN(;)
        TOKEN(})
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(multiples)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
          TOKEN([)
          TOKEN(])
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(getMultiples)
                                suffixOp
                                  TOKEN(()
                                  arguments
                                    expression
                                      assignmentExpr
                                        conditionalExpr
                                          logicalOrExpr
                                            logicalAndExpr
                                              equalityExpr
                                                relationalExpr
                                                  additiveExpr
                                                    multiplicativeExpr
                                                      unaryExpr
                                                        primaryExpr
                                                          literalExpr
                                                            TOKEN(2)
                                  TOKEN())
      TOKEN(;)
  statement
    printStatement
      TOKEN(print)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN("Multiples of 2: ")
                      TOKEN(+)
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(multiples)
                              suffixOp
                                TOKEN([)
                                expression
                                  assignmentExpr
                                    conditionalExpr
                                      logicalOrExpr
                                        logicalAndExpr
                                          equalityExpr
                                            relationalExpr
                                              additiveExpr
                                                multiplicativeExpr
                                                  unaryExpr
                                                    primaryExpr
                                                      literalExpr
                                                        TOKEN(0)
                                TOKEN(])
                      TOKEN(+)
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN(", ")
                      TOKEN(+)
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            leftHandSide
                              primaryAtom
                                TOKEN(multiples)
                              suffixOp
                                TOKEN([)
                                expression
                                  assignmentExpr
                                    conditionalExpr
                                      logicalOrExpr
                                        logicalAndExpr
                                          equalityExpr
                                            relationalExpr
                                              additiveExpr
                                                multiplicativeExpr
                                                  unaryExpr
                                                    primaryExpr
                                                      literalExpr
                                                        TOKEN(1)
                                TOKEN(])
      TOKEN())
      TOKEN(;)
  statement
    functionDeclaration
      TOKEN(function)
      TOKEN(factorial)
      TOKEN(()
      parameters
        parameter
          TOKEN(n)
          TOKEN(:)
          type
            baseType
              TOKEN(integer)
      TOKEN())
      TOKEN(:)
      type
        baseType
          TOKEN(integer)
      block
        TOKEN({)
        statement
          ifStatement
            TOKEN(if)
            TOKEN(()
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(n)
                          TOKEN(<=)
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  literalExpr
                                    TOKEN(1)
            TOKEN())
            block
              TOKEN({)
              statement
                returnStatement
                  TOKEN(return)
                  expression
                    assignmentExpr
                      conditionalExpr
                        logicalOrExpr
                          logicalAndExpr
                            equalityExpr
                              relationalExpr
                                additiveExpr
                                  multiplicativeExpr
                                    unaryExpr
                                      primaryExpr
                                        literalExpr
                                          TOKEN(1)
                  TOKEN(;)
              TOKEN(})
        statement
          returnStatement
            TOKEN(return)
            expression
              assignmentExpr
                conditionalExpr
                  logicalOrExpr
                    logicalAndExpr
                      equalityExpr
                        relationalExpr
                          additiveExpr
                            multiplicativeExpr
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(n)
                              TOKEN(*)
                              unaryExpr
                                primaryExpr
                                  leftHandSide
                                    primaryAtom
                                      TOKEN(factorial)
                                    suffixOp
                                      TOKEN(()
                                      arguments
                                        expression
                                          assignmentExpr
                                            conditionalExpr
                                              logicalOrExpr
                                                logicalAndExpr
                                                  equalityExpr
                                                    relationalExpr
                                                      additiveExpr
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              leftHandSide
                                                                primaryAtom
                                                                  TOKEN(n)
                                                        TOKEN(-)
                                                        multiplicativeExpr
                                                          unaryExpr
                                                            primaryExpr
                                                              literalExpr
                                                                TOKEN(1)
                                      TOKEN())
            TOKEN(;)
        TOKEN(})
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(a)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(2)
                        TOKEN(+)
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(3)
                          TOKEN(*)
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(4)
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(b)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(10)
                        TOKEN(-)
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(a)
                          TOKEN(/)
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(2)
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(c)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(boolean)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(true)
                  TOKEN(&&)
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              TOKEN(()
                              expression
                                assignmentExpr
                                  conditionalExpr
                                    logicalOrExpr
                                      logicalAndExpr
                                        equalityExpr
                                          relationalExpr
                                            additiveExpr
                                              multiplicativeExpr
                                                unaryExpr
                                                  primaryExpr
                                                    literalExpr
                                                      TOKEN(false)
                                      TOKEN(||)
                                      logicalAndExpr
                                        equalityExpr
                                          relationalExpr
                                            additiveExpr
                                              multiplicativeExpr
                                                unaryExpr
                                                  TOKEN(!)
                                                  unaryExpr
                                                    primaryExpr
                                                      literalExpr
                                                        TOKEN(false)
                              TOKEN())
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(d)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(boolean)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(a)
                    TOKEN(==)
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(8)
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(e)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(boolean)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(a)
                      TOKEN(<)
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(b)
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(x)
      TOKEN(;)
  statement
    assignment
      TOKEN(x)
      TOKEN(=)
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN(5)
      TOKEN(;)
  statement
    constantDeclaration
      TOKEN(const)
      TOKEN(K)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN(7)
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(v)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
          TOKEN([)
          TOKEN(])
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                arrayLiteral
                                  TOKEN([)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(1)
                                  TOKEN(,)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(2)
                                  TOKEN(,)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(3)
                                  TOKEN(])
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(y)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(v)
                                suffixOp
                                  TOKEN([)
                                  expression
                                    assignmentExpr
                                      conditionalExpr
                                        logicalOrExpr
                                          logicalAndExpr
                                            equalityExpr
                                              relationalExpr
                                                additiveExpr
                                                  multiplicativeExpr
                                                    unaryExpr
                                                      primaryExpr
                                                        literalExpr
                                                          TOKEN(0)
                                  TOKEN(])
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(z)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(integer)
          TOKEN([)
          TOKEN(])
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                arrayLiteral
                                  TOKEN([)
                                  TOKEN(])
      TOKEN(;)
  statement
    variableDeclaration
      TOKEN(let)
      TOKEN(s)
      typeAnnotation
        TOKEN(:)
        type
          baseType
            TOKEN(string)
      initializer
        TOKEN(=)
        expression
          assignmentExpr
            conditionalExpr
              logicalOrExpr
                logicalAndExpr
                  equalityExpr
                    relationalExpr
                      additiveExpr
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              literalExpr
                                TOKEN("num: ")
                        TOKEN(+)
                        multiplicativeExpr
                          unaryExpr
                            primaryExpr
                              leftHandSide
                                primaryAtom
                                  TOKEN(a)
      TOKEN(;)
  statement
    printStatement
      TOKEN(print)
      TOKEN(()
      expression
        assignmentExpr
          conditionalExpr
            logicalOrExpr
              logicalAndExpr
                equalityExpr
                  relationalExpr
                    additiveExpr
                      multiplicativeExpr
                        unaryExpr
                          primaryExpr
                            literalExpr
                              TOKEN("Program finished.")
      TOKEN())
      TOKEN(;)
  TOKEN(<EOF>)
